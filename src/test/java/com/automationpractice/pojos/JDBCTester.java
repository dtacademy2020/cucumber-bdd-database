package com.automationpractice.pojos;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;



public class JDBCTester {

	public static void main(String[] args) throws SQLException {
		
		String user = "duotech";
		String password = "duotech2020";
		
		String url = "jdbc:mysql://dtdatabase.c6qqyddfk30u.us-east-2.rds.amazonaws.com/employees";


		
		Connection connection = DriverManager.getConnection(url, user, password);
		
		System.out.println("Database connection established");
		
		Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE); //Creates a Statement object for sending
															//SQL statements to the database. 
		String query = "SELECT * FROM employees";
		
		ResultSet rs = statement.executeQuery(query);
		
		
		//A table of data representing a database result set, 
		//which is usually generated by executing a statement that queries the database.
		
		/*
		 * A ResultSet object maintains a cursor pointing to its current row of data. 
		 * Initially the cursor is positioned before the first row. 
		 * The next method moves the cursor to the next row, and because it returns 
		 * false when there are no more rows in the ResultSet object,
		 * it can be used in a while loop to iterate through the result set. 
		 */
		
//		rs.next();
		//In JDBC indexes start from 1;
		
//		System.out.println(rs.getObject(4)); // use index 
//		
//		System.out.println(rs.getObject("last_name"));
		
		//next()
		/*
		 * Moves the cursor forward one row from its current position.
		 * A ResultSet cursor is initially positioned before the first row; 
		 * the first call to the method next makes the first row the current row; 
		 * the second call makes the second row the current row, and so on. 
		 * When a call to the next method returns false,the cursor is positioned after the last row. 

		 */
		
		
		
//		
//		while (rs.next()) {
//			System.out.println(rs.getObject("first_name") + "\t" + rs.getObject("last_name"));
//		}
		
//		rs.next();
//		rs.absolute(10);
//		rs.first();
//		System.out.println(rs.getObject("first_name") + "\t" + rs.getObject("last_name"));
//		
//		rs.last();
//		System.out.println(rs.getObject("first_name") + "\t" + rs.getObject("last_name"));
//		
////		rs.beforeFirst();
////		rs.afterLast();
//		
//		System.out.println(rs.getObject("first_name") + "\t" + rs.getObject("last_name"));
		
		//Get the column count
		ResultSetMetaData metadata = rs.getMetaData();
		int columnCount = metadata.getColumnCount();
		
		for (int i = 1; i <= columnCount; i++) {
			System.out.println(metadata.getColumnName(i)); // get the column name
		}
		
		
		
		
		//Get the row count
		rs.last();
		int rowCount = rs.getRow();
		
		System.out.println(rowCount);
		
		rs.beforeFirst();
		int i = 1;
		for ( i = 1; i <= rowCount; i++) {
			rs.next();
			for (int j = 1; j <= columnCount; j++) {
				
				System.out.print(rs.getObject(j) + " ");
				
			}
			System.out.println();
			
		}
		
		System.out.println(i);
		
		
		rs.close();
		statement.close();
		connection.close();
		
		
		
		
		
		
		

	}

}
